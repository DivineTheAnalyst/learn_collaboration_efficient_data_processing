// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/python
{
	"name": "Python 3",
	// Or use a Dockerfile or Docker Compose file. More info: https://containers.dev/guide/dockerfile
	"image": "mcr.microsoft.com/devcontainers/python:1-3.9-bookworm",
	"runArgs": ["--name","spark-Learn"],
	"remoteUser": "root",
	"postCreateCommand": "bash -i .devcontainer/postCreateCommand.sh",
	"features": {
		"ghcr.io/devcontainers/features/docker-in-docker:2": {
			"moby": "false",
			"azureDnsAutoDetection": "false",
			"installDockerBuildx": "false",
			"installDockerComposeSwitch": "false",
			"version": "latest",
			"dockerDashComposeVersion": "latest"
		},
		"customizations": {
			"vscode": {
				"extensions": [
					"bastienboutonnet.vscode-dbt",
					"chrisdias.vscode-opennewinstance",
					"cweijan.vscode-office",
					"dvirtz.parquet-viewer",
					"henriblancke.vscode-dbt-formatter",
					"innoverio.vscode-dbt-power-user",
					"mechatroner.rainbow-csv",
					"mhutchie.git-graph",
					"ms-python.debugpy",
					"ms-python.python",
					"ms-python.vscode-pylance",
					"ms-toolsai.jupyter",
					"ms-toolsai.jupyter-keymap",
					"ms-toolsai.jupyter-renderers",
					"ms-toolsai.vscode-jupyter-cell-tags",
					"ms-toolsai.vscode-jupyter-slideshow",
					"mtxr.sqltools",
					"mtxr.sqltools-driver-pg",
					"mtxr.sqltools-driver-sqlite",
					"mutantdino.resourcemonitor",
					"randomfractalsinc.duckdb-sql-tools",
					"samuelcolvin.jinjahtml",
					"sourcegraph.cody-ai",
					"taoklerks.poor-mans-t-sql-formatter-vscode",
					"uloco.theme-bluloco-dark",
					"visualstudioexptteam.intellicode-api-usage-examples",
					"visualstudioexptteam.vscodeintellicode",
					"ms-azuretools.vscode-docker",
					"redhat.vscode-yaml",
					"esbenp.prettier-vscode"
	
				],
				"settings": {
					"terminal.integrated.env.osx": {
						"PYTHONPATH": "${env:PYTHONPATH}:${workspaceFolder}/data-processing-spark"
					},
					"terminal.integrated.env.linux": {
						"PYTHONPATH": "${env:PYTHONPATH}:${workspaceFolder}/data-processing-spark"
					},
					"terminal.integrated.env.windows": {
						"PYTHONPATH": "${env:PYTHONPATH};${workspaceFolder}/data-processing-spark"
					},
					"python.defaultInterpreterPath": ".venv/bin/python",
					"python.venvFolders": [
						"${workspaceFolder}/.venv"
					],
					"python.envFile": "${workspaceFolder}/.env",
					"python.terminal.activateEnvironment": true,
					"findrelated.workspaceRulesets": [
						{
							"name": "sql",
							"rules": [
								{
									"pattern": "^(.*/)?models/(.*/)?(.+\\.sql)$",
									"locators": [
										"**/compiled/**/$3"
									]
								},
								{
									"pattern": "^(.*/)?compiled/(.*/)?(.+\\.sql)$",
									"locators": [
										"**/run/**/$3"
									]
								},
								{
									"pattern": "^(.*/)?run/(.*/)?(.+\\.sql)$",
									"locators": [
										"**/models/**/$3"
									]
								}
							]
						}
					],
					"findrelated.applyRulesets": [
						"sql"
					],
					"findrelated.applyWorkspaceRulesets": [
						"sql"
					],
					"workbench.editor.highlightModifiedTabs": true,
					"workbench.editor.labelFormat": "medium",
					"workbench.editor.revealIfOpen": true,
					"editor.rulers": [
						99
					],
					"yaml.schemas": {
						"https://raw.githubusercontent.com/dbt-labs/dbt-jsonschema/main/schemas/latest/dbt_yml_files-latest.json": [
						  "/**/*.yml",
						  "!profiles.yml",
						  "!dbt_project.yml",
						  "!packages.yml",
						  "!selectors.yml",
						  "!profile_template.yml"
						],
						"https://raw.githubusercontent.com/dbt-labs/dbt-jsonschema/main/schemas/latest/dbt_project-latest.json": [
						  "dbt_project.yml"
						],
						"https://raw.githubusercontent.com/dbt-labs/dbt-jsonschema/main/schemas/latest/selectors-latest.json": [
						  "selectors.yml"
						],
						"https://raw.githubusercontent.com/dbt-labs/dbt-jsonschema/main/schemas/latest/packages-latest.json": [
						  "packages.yml"
						]
					  }
				}
			}
		}
	}
	// Features to add to the dev container. More info: https://containers.dev/features.
	// "features": {},

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Use 'postCreateCommand' to run commands after the container is created.
	// "postCreateCommand": "pip3 install --user -r requirements.txt",

	// Configure tool-specific properties.
	// "customizations": {},

	// Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
	// "remoteUser": "root"
}
